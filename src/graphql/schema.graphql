# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

input CheckoutInputType {
  amount: Float!
  checkoutRequestId: String
  checkoutTokenId: String!
  city: String!
  country: String
  email: String!
  fee: Float
  feeMethod: Float!
  feeType: String
  firstName: String!
  lastName: String!
  phoneNumber: String!
  postalCode: String!
  state: String!
  streetAddress: String!
  streetAddress2: String
  tip: Float!
  tipType: String!
  userId: String
  walletAddress: String!
}

input CheckoutRequestInputType {
  amount: Float!
  email: String
  partnerOrderId: String
  phoneNumber: String
  walletAddress: String!
}

type CheckoutRequestType {
  amount: Float!

  """checkout"""
  checkout: CheckoutType
  city: String
  country: String
  createdAt: DateTime
  email: String
  fee: Float!
  feeMethod: Float!
  feeType: String!
  firstName: String
  id: ID!
  lastName: String
  partnerOrderId: String
  phoneNumber: String
  postalCode: String
  state: String
  status: String!
  streetAddress: String
  streetAddress2: String
  updatedAt: DateTime
  walletAddress: String!
}

type CheckoutType {
  amount: Float!
  checkoutRequestId: String
  city: String!
  country: String
  createdAt: DateTime
  currency: String!
  email: String!
  fee: Float!
  feeMethod: Float!
  feeType: String!
  firstName: String!
  id: ID!
  lastName: String!
  phoneNumber: String!
  postalCode: String!
  state: String!
  streetAddress: String!
  streetAddress2: String
  tip: Float!
  tipType: String!

  """transaction"""
  transaction: TransactionType
  updatedAt: DateTime
  walletAddress: String!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type Mutation {
  createCheckout(data: CheckoutInputType!): CheckoutType!
  createCheckoutRequest(data: CheckoutRequestInputType!): CheckoutType!
  createCheckoutWithoutUser(data: CheckoutInputType!): CheckoutType!
  createUser(data: UserInputType!): UserType!
  kycCompleted: Boolean!
  userKycCompleted(userId: String!): Boolean!
}

type Query {
  agreementLink: String!
  checkout(id: String!): CheckoutType!
  checkoutRequest(id: String!): CheckoutRequestType!
  checkouts: [CheckoutType!]!
  kycLink: String!
  me: UserType!
  sayHello: String!
  user(userId: String!): UserType
  userKycLink(userId: String!): String!
}

type TransactionType {
  checkoutId: String!
  date: DateTime!
  message: String!
  paidStatus: String!
  status: String!
  step: String!
  transactionId: String
}

input UserInputType {
  city: String!
  country: String!
  dob: String!
  email: String!
  externalUserId: String
  firstName: String!
  gender: String!
  lastName: String!
  partnerId: String
  password: String
  phoneNumber: String!
  postalCode: String!
  signedAgreementId: String!
  ssn: String!
  state: String!
  streetAddress: String!
  streetAddress2: String
}

type UserType {
  city: String!
  country: String
  createdAt: DateTime
  dob: String!
  email: String!
  firstName: String!
  gender: String!
  id: ID!
  isVerified: Boolean!
  lastName: String!
  phoneNumber: String!
  postalCode: String!
  ssn: String!
  state: String!
  status: String!
  streetAddress: String!
  streetAddress2: String!
  token: String!
  updatedAt: DateTime
}
